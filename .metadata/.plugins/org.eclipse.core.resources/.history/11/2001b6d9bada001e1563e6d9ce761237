package com.example.demo;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.Map;
import java.util.Optional;
import org.springframework.util.ReflectionUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.rest.webmvc.ResourceNotFoundException;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class OrderService {
	@Autowired
	OrderRepository repo;
	public ArrayList<OrderEntity> listAll() {
		return (ArrayList<OrderEntity>) repo.findAll();
	}
	public void save(OrderEntity oe) {
		repo.save(oe);
	}
	public void delete(Integer id) {
		repo.deleteById(id);
	}
//	public OrderEntity update(OrderEntity ord, long id) {
//		id= ord.getId();
//		OrderEntity ent = repo.findById(id);
//		ent.setCustomer_name(ord.getCustomer_name());
//		ent.setAddress(ord.getAddress());
//		ent.setQuantity(ord.getQuantity());
//		return repo.save(ent);
//	}
//	public OrderEntity display(Integer id) {
//		// TODO Auto-generated method stub
//		
//	}
	
	public OrderEntity getid(int id) {
		return repo.findById(id);
	}
	public OrderEntity update(Integer id, OrderEntity ent) {
		OrderEntity ents = repo.findById(id)
				.orElseThrow(()-> new ResourceNotFoundException("Order is not found"));
		ents.setAddress(ent.getAddress());
		ents.setQuantity(ent.getQuantity());
		ents.setCustomer_name(ent.getCustomer_name());
		
		return repo.save(ents);
		
	}
	
	
	
}